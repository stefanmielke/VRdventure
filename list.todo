- List of things to do

next:
    ✔ refactor code to create and add shapes to objects (reduce amount of lines) @done(24-07-31 20:06)
    ✔ refactor code to drag objects @done(24-07-31 22:52)
    ✔ move hand modules to 'interaction' folder @done(24-08-01 10:38)
    ✔ move motion module to 'locomotion' @done(24-08-01 10:39)
    ✔ remove globals: https://stackoverflow.com/questions/24327452/declaring-global-variable-inside-a-function-in-lua#24328555 @done(24-08-01 11:18)
    ✔ show solid sphere when colliding (to know it can be grabbed) @done(24-08-01 11:39)
    ✔ rename 'lighting' to 'simple_lighting' and move to 'lighting' folder @done(24-08-01 13:48)
    ✔ add joint when grabbing using type 'physics' @done(24-08-01 20:59)
    ☐ add new sphere for grabbing near the grab button, leaving the current to "act"
    ☐ configure button to grab
    ✔ try attaching the model to the collider userdata so we can iterate over those and render as needed (does it even make sense?) @done(24-08-02 19:49)
    ✔ check the model structure to understand if we can split models on the same glb file @done(24-08-02 19:25)
    ☐ just add the name of the object and match with a lua file outside to ease the creation of the same object multiple times

events:
    grabber:
        ☐ on_can_grab
        ☐ on_start_grab
        ☐ on_release_grab
        ☐ on_is_grabbing
    grababble:
        ☐ on_grabbed
        ☐ on_released
        ☐ on_is_grabbed
    motion:
        ☐ on_start_move
        ☐ on_stop_move
        ☐ on_is_moving
        ☐ on_is_stopped

vr playground:
    ☐ ladder and climb spots
    ☐ door
    ☐ drawer
    ☐ closet
    ☐ sliding door
    ☐ weapon
    ☐ 2 hand weapon
    ☐ 2 hands hold
    ☐ hand swap
    ☐ chest with lock/unlock
    ☐ backpack (no gravity inside)
    ☐ handles (like joysticks and switches)
    ☐ throw things (add velocity)
    ☐ grenades (to remove the pin)

locomotion:
    ✔ locomotion change (tp, smooth, snap or continuous turn) @done(24-08-02 14:44)
    ☐ locomotion with collision
        use capsule collider check every frame (do not create the collider itself) for movement
        understand how to check for camera going through walls, but not the collider (probably not move the collider, but having a DistanceJoint attached? with min 0 max total playarea?)
        remove collision from grababbles and controllers
    ☐ jump
    ☐ moving platforms
        just use friction?
    ☐ dark scene when going inside invalid geometry (like walls, but whenever camera goes either inside collisions or when goes too far off the body)

future:
    ☐ make collider on points for more precision
    ☐ ui attached to the hand (multiple attach points)
    ☐ hands

fixes:
    ☐ add offset to fix controller position
    ☐ add offset to interaction sphere to be near trigger
    ☐ fix turn angle on locomotion